---
import { Image } from "astro:assets";
import PDtg from "../assets/PD_tg.svg";
import Logo from "../assets/logo.png";
import "../styles/tailwind.css";
import { LanguagePicker } from "../components/reactive/LanguagePicker";
import { useAstroTranslations, useAstroLocale } from "../i18n/utils";
import { getRelativeLocaleUrl } from "astro:i18n";
const l = useAstroLocale(Astro);
const t = useAstroTranslations(Astro);

const { variant = "default" } = Astro.props;
---

<!-- Шапка -->
<header class="header">
  <div class="container">
    <div class="lala">
      <div class="logo">
        <a href={getRelativeLocaleUrl(l, "/")}>
          <Image src={Logo} alt="Лого" loading={"eager"} />
        </a>
      </div>
      <div class="burger" id="burger">
        <span></span>
        <span></span>
        <span></span>
      </div>
      <div class="navigation" id="navigation">
        <button class="close" id="close">&times;</button>
        {
          variant !== "app" && (
            <nav class="nav">
              <a href="#app">{t("H.app")}</a>
              <a href="#map">{t("H.map")}</a>
              <a href="#index">{t("H.index")}</a>
              <a href="#how-to-see">{t("H.how")}</a>
              <a href="#where-to-see">{t("H.where")}</a>
              <a href="/faq">{t("FAQ")}</a>
              <a href="https://t.me/polarlightspro">
                <Image class="w-auto" src={PDtg} alt="Telegram" />
              </a>
            </nav>
          )
        }
      </div>
      <div class="lang">
        <LanguagePicker client:only="react" />
      </div>
    </div>
  </div>
</header>

<style>
  .lala {
    display: flex;
    justify-content: space-between;
  }
  .header {
    /* background: url("/src/assets/aurora-header.png") no-repeat center center /
      cover; */
    background-color: #001b24;
    color: white;
    width: 100%;
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100px;
  }

  .logo {
    /* position: absolute;
    margin: -22px 0px; */
    width: 85px;
  }

  .navigation {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .nav {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .navigation nav a {
    color: white;
    text-decoration: none;
    margin: 0 15px;
    font-weight: normal;
  }

  .navigation nav a:hover {
    text-decoration: underline;
  }

  .burger {
    display: none;
    width: 30px;
    height: 20px;
    flex-direction: column;
    justify-content: space-between;
    cursor: pointer;
    margin-left: auto; /* Перемещает бургер в крайний правый угол */
    margin-top: 31px;
  }

  .burger span {
    display: block;
    height: 4px;
    background: white;
    border-radius: 2px;
  }

  .mobile-nav {
    position: fixed;
    top: 0;
    right: -100%;
    width: 250px;
    height: 100%;
    background: #001b24;
    box-shadow: -2px 0 5px rgba(0, 0, 0, 0.5);
    transition: right 0.3s ease-in-out;
    flex-direction: column;
    justify-content: start;
    padding-top: 120px;
    align-items: center;
    z-index: 1000;
  }

  .mobile-nav nav a {
    color: white;
    text-decoration: none;
    margin: 15px 0;
    font-size: 18px;
    font-weight: normal;
  }

  .mobile-nav nav a:hover {
    text-decoration: underline;
  }

  .mobile-nav.open {
    right: 0;
  }

  .close {
    position: absolute;
    top: 10px;
    right: 10px;
    background: none;
    border: none;
    color: white;
    font-size: 48px;
    cursor: pointer;
    display: none;
  }

  .mobile-nav.open .close {
    display: block;
  }
  .lang {
    width: 85px;
  }

  @media (max-width: 1124px) {
    .navigation {
      display: none;
    }

    .lang {
      display: block;
      /* margin-top: 20px; */
      text-align: center;
      width: 100px;
    }

    .burger {
      display: flex;
    }

    .mobile-nav {
      display: flex;
    }

    .header {
      padding: 40px 0;
    }

    .nav {
      display: contents;
    }
  }

  @media (max-width: 812px) {
    .container_head {
      padding: 0 20px;
    }
  }

  @media (max-width: 510px) {
    .header {
      height: 80px;
    }

    .logo {
      width: 70px;
    }
    .burger {
      margin-top: 26px;
    }
  }
</style>

<script is:inline>
  const burger = document.getElementById("burger");
  const navigation = document.getElementById("navigation");
  const close = document.getElementById("close");
  const lang = document.querySelector(".lang");
  const lala = document.querySelector(".lala");
  const nav = document.querySelector(".nav"); // Получаем сам <nav>

  function debounce(func, wait, immediate) {
    var timeout;
    return function () {
      var context = this,
        args = arguments;
      var later = function () {
        timeout = null;
        if (!immediate) func.apply(context, args);
      };
      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) func.apply(context, args);
    };
  }
  const DEBOUNSE_DELAY = 200;
  // Функция перемещения lang
  function moveLangToNav() {
    if (window.innerWidth <= 1124) {
      if (!navigation.contains(lang)) {
        navigation.appendChild(lang);
      }
    } else {
      if (navigation.contains(lang)) {
        navigation.removeChild(lang); // Удаляем lang из navigation перед возвратом
      }
      if (!lala.contains(lang)) {
        lala.appendChild(lang);
      }
    }
  }

  // Запускаем функцию при загрузке страницы
  document.addEventListener("DOMContentLoaded", moveLangToNav);

  // Перемещение lang при изменении размера экрана
  window.addEventListener("resize", moveLangToNav);
  // Открытие меню
  burger.addEventListener(
    "click",
    debounce(() => {
      if (!navigation.classList.contains("open"))
        navigation.classList.add("open");
      if (!navigation.classList.contains("mobile-nav"))
        navigation.classList.add("mobile-nav");
    }),
    DEBOUNSE_DELAY,
  );

  // Функция для закрытия меню
  const closeMenu = () => {
    if (navigation.classList.contains("open"))
      navigation.classList.remove("open");
    if (navigation.classList.contains("mobile-nav"))
      navigation.classList.remove("mobile-nav");
  };

  // Закрытие по кнопке "крестик"
  close.addEventListener("click", debounce(closeMenu, DEBOUNSE_DELAY));

  // Закрытие при клике вне меню
  document.addEventListener("click", (event) => {
    if (
      navigation.classList.contains("open") &&
      !navigation.contains(event.target) && // Клик вне меню
      !burger.contains(event.target) // Исключаем бургер
    ) {
      closeMenu();
    }
  });

  // Закрытие при клике на любой пункт <nav>
  nav.addEventListener("click", (event) => {
    if (event.target.tagName.toLowerCase() === "a") {
      closeMenu();
    }
  });
</script>
