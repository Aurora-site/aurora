---
import { Image, getImage } from "astro:assets";
import store from "/src/assets/store.png";
import { useAstroTranslations } from "../../i18n/utils";
import auroraback_mb from "../../assets/auroraback_mb.png";
const auroraBackImageUrl = `url(${(await getImage({ src: auroraback_mb })).src})`;
import auroraback_app from "../../assets/auroraback_app.png";
const auroraBackAppImageUrl = `url(${(await getImage({ src: auroraback_app })).src})`;
const t = useAstroTranslations(Astro);
---

<style define:vars={{ auroraBackImageUrl, auroraBackAppImageUrl }}>
  .description h1 {
    font-family: "SongerGrotesqueBold";
    font-size: 64px;
  }
  .app {
    font-family: "SongerGrotesqueBold";
    font-size: 64px;
  }

  .description h2 {
    font-family: "SongerGrotesqueBold";
    font-size: 36px;
    /* margin: 60px 0; */
  }

  /*  .description p {
      margin: 0 auto;
      font-size: 1em;
      line-height: 1.5;
      text-align: left;
    }*/

  .description ul {
    display: block;
    padding-top: 60px;
    font-size: 36px;
    text-align: left;
    list-style: disc; /* Добавляем маркеры */
    padding-left: 20px; /* Отступ для корректного отображения */
  }

  .description ul li {
    font-family: "SongerGrotesqueBold";
    font-size: 24px;
  }

  .app_screens {
    display: flex;
    overflow-x: auto;
    scroll-behavior: smooth;
    gap: 30px;
    white-space: nowrap;
    justify-content: space-between;
  }

  .app-slider-container {
    position: relative;
    margin: 0 auto;
  }

  .stores_cards {
    flex: 0 0 auto;
    width: 350px;
    height: 350px;
    background-color: #386e784d;
    border-radius: 20px;
    position: relative;
  }

  .store_img {
    display: flex;
    justify-content: center;
    padding-top: 10px;
  }

  .just-button {
    background-color: #18a5bf;
    padding: 10px 50px;
    border-radius: 20px;
    position: absolute;
    bottom: 20px; /* Закрепляем кнопку внизу */
    left: 50%;
    transform: translateX(-50%); /* Центрируем по горизонтали */
    color: white;
    font-weight: 600;
  }

  p {
    font-size: 16px;
    text-align: left;
  }

  .Name {
    font-size: 20px;
    padding: 0 10px;
    text-align: center;
  }
  .slider-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    color: white;
    border: none;
    cursor: pointer;
    padding: 5px 15px;
    z-index: 1000;
    font-size: 30px;
  }

  .slider-button.left {
    left: -50px;
  }

  .slider-button.right {
    right: -50px;
  }
  #description {
    background-image: var(--auroraBackImageUrl);
  }
  @media (min-width: 768px) {
    #description {
      background-image: var(--auroraBackAppImageUrl);
    }
  }
  @media (max-width: 952px) {
    .slider-button {
      display: none !important;
    }
  }

  @media (max-width: 640px) {
    .description ul li {
      font-size: 24px;
    }
    .description h2 {
      font-size: 24px;
    }
  }

  @media (max-width: 482px) {
    .imag,
    .stores_cards {
      width: 90%;
    }
  }
  @media (max-width: 440px) {
    .app {
      font-size: 40px;
    }
  }
</style>

<section
  class="description bg-contain bg-[center_50px] bg-no-repeat pt-[80px] pb-5 text-center md:bg-[0px_20px]"
  id="description"
>
  <h1>{t("App.title")}</h1>
  <div class="app">{t("App.app")}</div>
  <p class="pt-16 text-left">
    {t("App.text1")}
  </p>
  <ul>
    <li>{t("App.point1")}</li>
    <li>{t("App.point2")}</li>
    <li>{t("App.point3")}</li>
    <li>{t("App.point4")}</li>
    <li>{t("App.point5")}</li>
  </ul>
  <h2 class="pt-[60px] pb-[60px] text-left text-[36px]">
    {t("App.mini-title1")}
  </h2>

  <div class="app-slider-container">
    <button class="slider-button left" id="appSlideLeft">&#8249;</button>
    <div class="app_screens" id="appSlider">
      <div class="stores_cards">
        <div class="store_img">
          <Image src={store} alt="Скрин приложения" />
        </div>
        <p class="Name pt-1.5 text-center font-bold">App Store</p>
        <div class="pt-1.5">Для мобильных устройств на iOS</div>
        <button class="just-button">Скачать</button>
      </div>

      <div class="stores_cards">
        <div class="store_img">
          <Image src={store} alt="Скрин приложения" />
        </div>
        <p class="Name pt-1.5 text-center font-bold">App Store</p>
        <div class="pt-1.5">Для мобильных устройств на iOS</div>
        <button class="just-button">Скачать</button>
      </div>

      <div class="stores_cards">
        <div class="store_img">
          <Image src={store} alt="Скрин приложения" />
        </div>
        <p class="Name pt-1.5 text-center font-bold">App Store</p>
        <div class="pt-1.5">Для мобильных устройств на iOS</div>
        <button class="just-button">Скачать</button>
      </div>
    </div>
    <button class="slider-button right" id="appSlideRight">&#8250;</button>
  </div>
</section>

<script is:inline>
  {
    function initSlider() {
      const appSlider = document.getElementById("appSlider");
      const appSlideLeft = document.getElementById("appSlideLeft");
      const appSlideRight = document.getElementById("appSlideRight");

      if (!appSlider) return;

      // Проверяем, нужен ли скролл
      const totalWidth = Array.from(appSlider.children).reduce(
        (sum, item) => sum + item.offsetWidth,
        0,
      );
      const visibleWidth = appSlider.offsetWidth;

      if (totalWidth > visibleWidth) {
        // Показываем кнопки и активируем прокрутку
        appSlideLeft.style.display = "block";
        appSlideRight.style.display = "block";

        appSlideLeft.addEventListener("click", () => {
          appSlider.scrollBy({ left: -380, behavior: "smooth" });
        });

        appSlideRight.addEventListener("click", () => {
          appSlider.scrollBy({ left: 380, behavior: "smooth" });
        });
      } else {
        // Скрываем кнопки, если скролл не нужен
        appSlideLeft.style.display = "none";
        appSlideRight.style.display = "none";
      }
    }

    window.addEventListener("load", initSlider);
    window.addEventListener("resize", initSlider);
  }
</script>
